---
# Source: apisix/templates/deployment.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nuvolaris-apisix
  namespace: nuvolaris
  labels:
    helm.sh/chart: apisix-1.8.0
    
    app.kubernetes.io/name: apisix
    app.kubernetes.io/instance: nuvolaris
    app.kubernetes.io/version: "3.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      
      app.kubernetes.io/name: apisix
      app.kubernetes.io/instance: nuvolaris
  template:
    metadata:
      annotations:
        checksum/config: 83e604d11059968463ceff6e94a2ae20de233c5cf13c35be0edab9ece3a14de6
      labels:
        
        app.kubernetes.io/name: apisix
        app.kubernetes.io/instance: nuvolaris
    spec:
      serviceAccountName: default
      containers:
        - name: apisix
          image: "apache/apisix:3.7.0-debian"
          imagePullPolicy: IfNotPresent
          env:
    
          ports:
            - name: http
              containerPort: 9080
              protocol: TCP     
            - name: tls
              containerPort: 9443
              protocol: TCP
            - name: admin
              containerPort: 9180
              protocol: TCP
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 9080
            timeoutSeconds: 1
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - "sleep 30"
          volumeMounts:
            - mountPath: /usr/local/apisix/conf/config.yaml
              name: apisix-config
              subPath: config.yaml
          resources:
            {}
      hostNetwork: false
      initContainers:
        - name: wait-etcd
          image: busybox:1.28
          command: ['sh', '-c', "until nc -z nuvolaris-etcd.nuvolaris.svc.cluster.local 2379; do echo waiting for etcd `date`; sleep 2; done;"]
        - command:
          - /bin/sh
          - -c
          - |
            sysctl -w net.core.somaxconn=65535
            sysctl -w net.ipv4.ip_local_port_range="1024 65535"
            sysctl -w net.ipv4.tcp_max_syn_backlog=8192
            sysctl -w fs.file-max=1048576
            sysctl -w fs.inotify.max_user_instances=16384
            sysctl -w fs.inotify.max_user_watches=524288
            sysctl -w fs.inotify.max_queued_events=16384
          image: busybox:1.28
          name: init-sysctl
          securityContext:
            privileged: true
      volumes:
        - configMap:
            name: nuvolaris-apisix
          name: apisix-config
